{"ast":null,"code":"import { apiLogin } from \"../remote/garden-book/garden-book-clients\";\nexport const loginTypes = {\n  SUCCESSFUL_LOGIN: 'LOGIN_SUCCESSFUL_LOGIN',\n  UNSUCCESSFUL_LOGIN: 'LOGIN_SUCCESSFUL_LOGIN'\n};\nexport const updateCurrentUser = (username, password) => async dispatch => {\n  let response = await apiLogin(username, password);\n\n  if (response.body) {\n    dispatch({\n      type: loginTypes.SUCCESSFUL_LOGIN,\n      payload: {\n        currentUser: response.body\n      }\n    });\n  } else {\n    dispatch({\n      type: loginTypes.UNSUCCESSFUL_LOGIN,\n      payload: {\n        loginMessage: response.loginMessage\n      }\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Stefan B.D. Small/Desktop/proj2_repo/porter/FrontEnd/porter-app/src/action-mappers/login-action.ts"],"names":["apiLogin","loginTypes","SUCCESSFUL_LOGIN","UNSUCCESSFUL_LOGIN","updateCurrentUser","username","password","dispatch","response","body","type","payload","currentUser","loginMessage"],"mappings":"AAAA,SAASA,QAAT,QAAyB,2CAAzB;AAEA,OAAO,MAAMC,UAAU,GAAG;AACtBC,EAAAA,gBAAgB,EAAE,wBADI;AAEtBC,EAAAA,kBAAkB,EAAE;AAFE,CAAnB;AAKP,OAAO,MAAMC,iBAAiB,GAAG,CAACC,QAAD,EAAkBC,QAAlB,KAAsC,MAAOC,QAAP,IAAwB;AAC3F,MAAIC,QAAY,GAAG,MAAMR,QAAQ,CAACK,QAAD,EAAUC,QAAV,CAAjC;;AACA,MAAGE,QAAQ,CAACC,IAAZ,EAAkB;AACdF,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAACT,UAAU,CAACC,gBADX;AAELS,MAAAA,OAAO,EAAC;AACJC,QAAAA,WAAW,EAACJ,QAAQ,CAACC;AADjB;AAFH,KAAD,CAAR;AAMH,GAPD,MAOO;AACHF,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAACT,UAAU,CAACE,kBADX;AAELQ,MAAAA,OAAO,EAAE;AACLE,QAAAA,YAAY,EAACL,QAAQ,CAACK;AADjB;AAFJ,KAAD,CAAR;AAMH;AACJ,CAjBM","sourcesContent":["import { apiLogin } from \"../remote/garden-book/garden-book-clients\";\r\n\r\nexport const loginTypes = {\r\n    SUCCESSFUL_LOGIN: 'LOGIN_SUCCESSFUL_LOGIN',\r\n    UNSUCCESSFUL_LOGIN: 'LOGIN_SUCCESSFUL_LOGIN'\r\n}\r\n\r\nexport const updateCurrentUser = (username:string, password:string) => async (dispatch:any) => {\r\n    let response:any = await apiLogin(username,password)\r\n    if(response.body) {\r\n        dispatch({\r\n            type:loginTypes.SUCCESSFUL_LOGIN,\r\n            payload:{\r\n                currentUser:response.body\r\n            }\r\n        })\r\n    } else {\r\n        dispatch({\r\n            type:loginTypes.UNSUCCESSFUL_LOGIN,\r\n            payload: {\r\n                loginMessage:response.loginMessage\r\n            }\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}